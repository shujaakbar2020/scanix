name: Release Pipeline

on:
  push:
    branches:
      - main

jobs:
  semantic-release:
    name: Release Pipeline
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GIT_ACTIONS_SECRET }}

  publish:
    runs-on: ubuntu-latest
    needs: semantic-release
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          
      - name: Update Cargo.toml Version
        id: update_version
        run: |
          NEW_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
          NEW_VERSION=${NEW_VERSION#v}
          sed -i "s/^version = \".*\"/version = \"$NEW_VERSION\"/" Cargo.toml
          git config user.name ${{ secrets.GIT_USER }}
          git config user.email ${{ secrets.GIT_EMAIL_ADDR }}
          git add Cargo.toml
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "version update"
            git push origin main
          fi

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build Documentation
        run: cargo doc --no-deps

      - name: Publish Crate
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish --token $CARGO_REGISTRY_TOKEN --allow-dirty
