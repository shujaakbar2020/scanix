name: Release Pipeline

on:
  push:
    branches:
      - main

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GIT_ACTIONS_SECRET }}

      - name: Update Cargo.toml Version
        id: update_version
        run: |
          export NEW_VERSION=git describe --tags $(git rev-list --tags --max-count=1)
          sed -i "s/^version = \".*\"/version = \"$NEW_VERSION\"/" Cargo.toml
          cat Cargo.toml
        env:
          NEW_VERSION: ${{ env.NEW_VERSION }}

      - name: Commit Updated Cargo.toml
        run: |
          git config user.name ${{ secrets.GIT_USER }}
          git config user.email ${{ secrets.GIT_EMAIL_ADDR }}
          git add Cargo.toml
          git commit -m "update version to ${{ env.NEW_VERSION }}"
          git push origin main

  # publish-crate:
  #   name: Publish Crate to crates.io
  #   runs-on: ubuntu-latest
  #   needs: semantic-release
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3

  #     - name: Set up Rust
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         override: true

  #     - name: Publish Crate
  #       env:
  #         CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  #       run: cargo publish --token $CARGO_REGISTRY_TOKEN

  # publish-docs:
  #   name: Publish Documentation to docs.rs
  #   runs-on: ubuntu-latest
  #   needs: publish-crate
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3

  #     - name: Set up Rust
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         override: true

  #     - name: Build Documentation
  #       run: cargo doc --no-deps
